package scala

import de.sciss.midi.{NoteOff, NoteOn}
import Type.ModulationType


object ChordBuilder1Type {

  def buildSequenceForFirstType(major: Boolean, majorDestination: Boolean, source: Int, destination: Int) = {
    val boxForTonic = tonic(major,source)
    val boxForFirstChord = modulationChord1(ModulationType.First,source,destination,boxForTonic)

    println("EYGSUDFJGS: ")
    printTab(boxForFirstChord,4)
    //przepisanie akordu do nowej tablicy
    val tmp = new Array [Int] (4)
    val temp = new Array [Int] (4)
    val tmp2 = new Array [Int] (4)
    val tmp3 = new Array [Int] (4)
    val tmp4 = new Array [Int] (4)
    val tmp5 = new Array [Int] (4)
    for(i <- 0 to 3) tmp(i) = boxForFirstChord(i)

    val array3 = modulationChord2(majorDestination,tmp)
    //4 akord
    for(i <- 0 to 3) temp(i) = array3(i)
    val array4 = cadenceChord1(majorDestination,temp,destination)
    for(i <- 0 to 3) tmp2(i) = array4(i)
    val array5 = cadenceChord2(majorDestination,tmp2)

    for(i <- 0 to 3) tmp3(i) = array5(i)
    val array6 = cadenceChord3(majorDestination,tmp3)

    for(i <- 0 to 3) tmp4(i) = array6(i)
    val array7 = cadenceChord4(majorDestination,tmp4)

    for(i <- 0 to 3) tmp5(i) = array7(i)
    val array8 = cadenceChord5(majorDestination,tmp5)


    buildVector(boxForTonic(0),boxForTonic(1),boxForTonic(2),boxForTonic(3)) ++
      buildVector(boxForFirstChord(0),boxForFirstChord(1),boxForFirstChord(2),boxForFirstChord(3)) ++
      buildVector(boxForFirstChord(0)-1,boxForFirstChord(1),boxForFirstChord(2),boxForFirstChord(3)) ++
      buildVector(array3(0),array3(1),array3(2),array3(3)) ++
      buildVector(array4(0),array4(1),array4(2),array4(3)) ++
      buildVector(array4(0)+1,array4(1),array4(2),array4(3)) ++
      buildVector(array5(0),array5(1),array5(2),array5(3)) ++
      buildVector(array6(0),array6(1),array6(2),array6(3)) ++
      buildVector(array7(0),array7(1),array7(2),array7(3)) ++
      buildVector(array8(0),array8(1),array8(2),array8(3))
  }


}